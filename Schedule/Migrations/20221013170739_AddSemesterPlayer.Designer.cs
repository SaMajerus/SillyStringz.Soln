// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Schedule.Models;

namespace Schedule.Migrations
{
    [DbContext(typeof(ScheduleContext))]
    [Migration("20221013170739_AddSemesterPlayer")]
    partial class AddSemesterPlayer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Schedule.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Schedule.Models.Semester", b =>
                {
                    b.Property<int>("SemesterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Term")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SemesterId");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("Schedule.Models.SemesterPlayer", b =>
                {
                    b.Property<int>("SemesterPlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.HasKey("SemesterPlayerId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("SemesterId");

                    b.ToTable("SemesterPlayer");
                });

            modelBuilder.Entity("Schedule.Models.SemesterSport", b =>
                {
                    b.Property<int>("SemesterSportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<int>("SportId")
                        .HasColumnType("int");

                    b.HasKey("SemesterSportId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("SportId");

                    b.ToTable("SemesterSport");
                });

            modelBuilder.Entity("Schedule.Models.Sport", b =>
                {
                    b.Property<int>("SportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SportId");

                    b.ToTable("Sports");
                });

            modelBuilder.Entity("Schedule.Models.SportPlayer", b =>
                {
                    b.Property<int>("SportPlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("SportId")
                        .HasColumnType("int");

                    b.HasKey("SportPlayerId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("SportId");

                    b.ToTable("SportPlayer");
                });

            modelBuilder.Entity("Schedule.Models.SemesterPlayer", b =>
                {
                    b.HasOne("Schedule.Models.Player", "Player")
                        .WithMany("JoinSmstrPlyr")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Schedule.Models.Semester", "Semester")
                        .WithMany("JoinSmstrPlyr")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("Schedule.Models.SemesterSport", b =>
                {
                    b.HasOne("Schedule.Models.Semester", "Semester")
                        .WithMany("JoinSmstrSprt")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Schedule.Models.Sport", "Sport")
                        .WithMany("JoinSmstrSprt")
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Semester");

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("Schedule.Models.SportPlayer", b =>
                {
                    b.HasOne("Schedule.Models.Player", "Player")
                        .WithMany("JoinPlrSprt")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Schedule.Models.Sport", "Sport")
                        .WithMany("JoinPlrSprt")
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("Schedule.Models.Player", b =>
                {
                    b.Navigation("JoinPlrSprt");

                    b.Navigation("JoinSmstrPlyr");
                });

            modelBuilder.Entity("Schedule.Models.Semester", b =>
                {
                    b.Navigation("JoinSmstrPlyr");

                    b.Navigation("JoinSmstrSprt");
                });

            modelBuilder.Entity("Schedule.Models.Sport", b =>
                {
                    b.Navigation("JoinPlrSprt");

                    b.Navigation("JoinSmstrSprt");
                });
#pragma warning restore 612, 618
        }
    }
}
